{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmg23\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uB9AC\\uC561\\uD2B8 \\uD30C\\uC77C\\\\homereact\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n\n  // 이메일 중복 확인 함수\n  const checkEmailDuplication = async email => {\n    const response = await fetch(`http://localhost:8080/api/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email\n      })\n    });\n    const result = await response.text();\n    if (result === \"이메일이 중복되었습니다.\") {\n      setEmailError(\"이메일이 중복되었습니다.\");\n    } else {\n      setEmailError('');\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (emailError) {\n      alert(emailError); // 중복된 이메일일 경우 처리\n      return;\n    }\n\n    // DTO에 맞는 객체로 데이터를 구성\n    const userDTO = {\n      email,\n      username,\n      password\n    };\n    console.log('회원가입:', userDTO);\n\n    // 서버로 회원가입 요청 보내는 로직\n    fetch('http://localhost:8080/api/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(userDTO)\n    }).then(response => response.json()) // 응답을 JSON 형식으로 파싱\n    .then(data => {\n      if (data.success) {\n        console.log('회원가입 성공:', data.message);\n        alert(data.message);\n      } else {\n        console.log('회원가입 실패:', data.message);\n        alert(data.message);\n      }\n    }).catch(error => {\n      console.error('회원가입 실패:', error);\n      alert('회원가입 실패');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onBlur: () => checkEmailDuplication(email) // 이메일 입력 후 중복 체크\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(SignUp, \"VEBZ+jph0zaW71828oox66frq5Q=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SignUp","_s","email","setEmail","username","setUsername","password","setPassword","emailError","setEmailError","checkEmailDuplication","response","fetch","method","headers","body","JSON","stringify","result","text","handleSubmit","e","preventDefault","alert","userDTO","console","log","then","json","data","success","message","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","onBlur","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/kmg23/OneDrive/바탕 화면/리액트 파일/homereact/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SignUp() {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n\r\n  // 이메일 중복 확인 함수\r\n  const checkEmailDuplication = async (email) => {\r\n    const response = await fetch(`http://localhost:8080/api/signup`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email }),\r\n    });\r\n\r\n    const result = await response.text();\r\n    if (result === \"이메일이 중복되었습니다.\") {\r\n      setEmailError(\"이메일이 중복되었습니다.\");\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  \r\n    if (emailError) {\r\n      alert(emailError); // 중복된 이메일일 경우 처리\r\n      return;\r\n    }\r\n  \r\n    // DTO에 맞는 객체로 데이터를 구성\r\n    const userDTO = {\r\n      email,\r\n      username,\r\n      password,\r\n    };\r\n  \r\n    console.log('회원가입:', userDTO);\r\n  \r\n    // 서버로 회원가입 요청 보내는 로직\r\n    fetch('http://localhost:8080/api/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(userDTO),\r\n    })\r\n      .then((response) => response.json()) // 응답을 JSON 형식으로 파싱\r\n      .then((data) => {\r\n        if (data.success) {\r\n          console.log('회원가입 성공:', data.message);\r\n          alert(data.message);\r\n        } else {\r\n          console.log('회원가입 실패:', data.message);\r\n          alert(data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('회원가입 실패:', error);\r\n        alert('회원가입 실패');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>회원가입</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            onBlur={() => checkEmailDuplication(email)} // 이메일 입력 후 중복 체크\r\n            required\r\n          />\r\n          {emailError && <p style={{ color: 'red' }}>{emailError}</p>}\r\n        </div>\r\n        <div>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}