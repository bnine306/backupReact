{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\spingbackupfile\\\\homereactCategory\\\\src\\\\components\\\\ProductDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductDetail() {\n  _s();\n  const {\n    productId\n  } = useParams(); // URL에서 상품 ID를 받아옵니다.\n  const [product, setProduct] = useState(null); // 상품 상태\n\n  useEffect(() => {\n    console.log(\"Received productId:\", productId); // 값 확인\n    console.log(\"Type of productId:\", typeof productId); // 타입 확인\n\n    // 상품 상세 정보를 가져오는 함수\n    const fetchProductDetail = async () => {\n      try {\n        // productId를 Long으로 변환\n        const productId = Number(productId);\n        const response = await axios.get(`http://localhost:8080/api/products/${productId}`);\n        setProduct(response.data); // 상품 데이터를 상태에 저장\n      } catch (error) {\n        console.error(\"상품 정보를 가져오는데 실패했습니다:\", error);\n      }\n    };\n    fetchProductDetail(); // 상품 정보 가져오기\n  }, [productId]); // 상품 ID가 변경될 때마다 호출\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-detail\",\n    children: product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [product.productnum, \" - \", product.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        src: product.imageUrl,\n        alt: product.productnum,\n        className: \"product-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [product.price, \" \\uC6D0\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC785\\uACE0\\uC77C: \", product.arrivaldate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE74\\uD14C\\uACE0\\uB9AC: \", product.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC0C1\\uD488 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductDetail, \"FZ0q+cju/CwecoHXjizyQqtuJyc=\", false, function () {\n  return [useParams];\n});\n_c = ProductDetail;\nexport default ProductDetail;\nvar _c;\n$RefreshReg$(_c, \"ProductDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxDEV","_jsxDEV","ProductDetail","_s","productId","product","setProduct","console","log","fetchProductDetail","Number","response","get","data","error","className","children","productnum","category","fileName","_jsxFileName","lineNumber","columnNumber","src","imageUrl","alt","price","arrivaldate","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/spingbackupfile/homereactCategory/src/components/ProductDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction ProductDetail() {\r\n  const { productId } = useParams(); // URL에서 상품 ID를 받아옵니다.\r\n  const [product, setProduct] = useState(null); // 상품 상태\r\n\r\n  useEffect(() => {\r\n    console.log(\"Received productId:\", productId); // 값 확인\r\n    console.log(\"Type of productId:\", typeof productId); // 타입 확인\r\n\r\n    // 상품 상세 정보를 가져오는 함수\r\n    const fetchProductDetail = async () => {\r\n      try {\r\n        // productId를 Long으로 변환\r\n        const productId = Number(productId);\r\n\r\n        \r\n        const response = await axios.get(`http://localhost:8080/api/products/${productId}`);\r\n        setProduct(response.data); // 상품 데이터를 상태에 저장\r\n      } catch (error) {\r\n        console.error(\"상품 정보를 가져오는데 실패했습니다:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProductDetail(); // 상품 정보 가져오기\r\n  }, [productId]); // 상품 ID가 변경될 때마다 호출\r\n\r\n  return (\r\n    <div className=\"product-detail\">\r\n      {product ? (\r\n        <div>\r\n          <h2>{product.productnum} - {product.category}</h2> {/* 상품 번호와 카테고리 */}\r\n          <img src={product.imageUrl} alt={product.productnum} className=\"product-image\" /> {/* 이미지 */}\r\n          <p>{product.price} 원</p> {/* 가격 */}\r\n          <p>입고일: {product.arrivaldate}</p> {/* 입고일 */}\r\n          <p>카테고리: {product.category}</p> {/* 카테고리 */}\r\n        </div>\r\n      ) : (\r\n        <p>상품 정보를 불러오는 중입니다...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAU,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,SAAS,CAAC,CAAC,CAAC;IAC/CG,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,OAAOJ,SAAS,CAAC,CAAC,CAAC;;IAErD;IACA,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF;QACA,MAAML,SAAS,GAAGM,MAAM,CAACN,SAAS,CAAC;QAGnC,MAAMO,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,sCAAsCR,SAAS,EAAE,CAAC;QACnFE,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,OAAO,CAACO,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDL,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,oBACEH,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BX,OAAO,gBACNJ,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,GAAKX,OAAO,CAACY,UAAU,EAAC,KAAG,EAACZ,OAAO,CAACa,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,eACnDrB,OAAA;QAAKsB,GAAG,EAAElB,OAAO,CAACmB,QAAS;QAACC,GAAG,EAAEpB,OAAO,CAACY,UAAW;QAACF,SAAS,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eAClFrB,OAAA;QAAAe,QAAA,GAAIX,OAAO,CAACqB,KAAK,EAAC,SAAE;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,KAAC,eACzBrB,OAAA;QAAAe,QAAA,GAAG,sBAAK,EAACX,OAAO,CAACsB,WAAW;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eAClCrB,OAAA;QAAAe,QAAA,GAAG,4BAAM,EAACX,OAAO,CAACa,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,gBAENrB,OAAA;MAAAe,QAAA,EAAG;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC1B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACnB,EAAA,CAxCQD,aAAa;EAAA,QACEJ,SAAS;AAAA;AAAA8B,EAAA,GADxB1B,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}