{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';// useNavigate import 추가\nimport'../cssfile/Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[loginError,setLoginError]=useState('');// 로그인 실패 시 에러 메시지\nconst[responseMessage,setResponseMessage]=useState('');// 서버에서 반환한 메시지\nconst navigate=useNavigate();// navigate 객체 생성\nconst handleSubmit=async e=>{e.preventDefault();// 로그인 요청을 위한 userDTO 생성\nconst userDTO={email,password};try{// 로그인 API 요청\nconst response=await fetch('http://localhost:8080/api/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userDTO)});const result=await response.json();// 서버에서 응답 받기\nif(response.ok){// 로그인 성공\nalert(result.message);// 서버에서 성공 메시지 출력\nnavigate('/');// 로그인 성공 후 홈으로 이동\n}else{// 로그인 실패 시 에러 메시지 출력\nsetLoginError(result.message);setResponseMessage('');// 실패 시 서버에서 받은 메시지 설정\n}}catch(error){// 네트워크 오류 등 실패 처리\nsetLoginError(\"서버와의 연결에 실패했습니다.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",value:password,onChange:e=>setPassword(e.target.value),required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uB85C\\uADF8\\uC778\"})]}),loginError&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:loginError}),responseMessage&&/*#__PURE__*/_jsx(\"p\",{children:responseMessage}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate('/'),children:\"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})]});}export default Login;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","Login","email","setEmail","password","setPassword","loginError","setLoginError","responseMessage","setResponseMessage","navigate","handleSubmit","e","preventDefault","userDTO","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","error","className","children","onSubmit","type","value","onChange","target","required","style","color","onClick"],"sources":["C:/Users/kmg23/OneDrive/바탕 화면/리액트 파일/homereact/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // useNavigate import 추가\r\nimport '../cssfile/Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginError, setLoginError] = useState(''); // 로그인 실패 시 에러 메시지\r\n  const [responseMessage, setResponseMessage] = useState(''); // 서버에서 반환한 메시지\r\n  const navigate = useNavigate(); // navigate 객체 생성\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 로그인 요청을 위한 userDTO 생성\r\n    const userDTO = { email, password };\r\n\r\n    try {\r\n      // 로그인 API 요청\r\n      const response = await fetch('http://localhost:8080/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userDTO),\r\n      });\r\n\r\n      const result = await response.json(); // 서버에서 응답 받기\r\n\r\n      if (response.ok) {\r\n        // 로그인 성공\r\n        alert(result.message); // 서버에서 성공 메시지 출력\r\n        navigate('/'); // 로그인 성공 후 홈으로 이동\r\n      } else {\r\n        // 로그인 실패 시 에러 메시지 출력\r\n        setLoginError(result.message); \r\n        setResponseMessage(''); // 실패 시 서버에서 받은 메시지 설정\r\n      }\r\n    } catch (error) {\r\n      // 네트워크 오류 등 실패 처리\r\n      setLoginError(\"서버와의 연결에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>로그인</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n\r\n      {/* 로그인 실패 시 에러 메시지 출력 */}\r\n      {loginError && <p style={{ color: 'red' }}>{loginError}</p>}\r\n\r\n      {/* 서버에서 응답받은 메시지 출력 */}\r\n      {responseMessage && <p>{responseMessage}</p>}\r\n\r\n      {/* 홈으로 돌아가기 버튼 */}\r\n      <button onClick={() => navigate('/')}>홈으로 돌아가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}