{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import axios from'axios';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";function ProductDetail(){const{productId}=useParams();// URL에서 상품 ID를 받아옵니다.\nconst[product,setProduct]=useState(null);// 상품 상태\nuseEffect(()=>{console.log(\"Received productId:\",productId);// 값 확인\nconsole.log(\"Type of productId:\",typeof productId);// 타입 확인\n// 상품 상세 정보를 가져오는 함수\nconst fetchProductDetail=async()=>{try{// productId를 Long으로 변환\nconst numericProductId=Number(productId);// productId를 숫자로 변환\n// 숫자로 변환된 값으로 서버에 요청\nconst response=await axios.get(`http://localhost:8080/api/products/${numericProductId}`);setProduct(response.data);// 상품 데이터를 상태에 저장\n}catch(error){console.error(\"상품 정보를 가져오는데 실패했습니다:\",error);}};fetchProductDetail();// 상품 정보 가져오기\n},[productId]);// 상품 ID가 변경될 때마다 호출\nreturn/*#__PURE__*/_jsx(\"div\",{className:\"product-detail\",children:product?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{style:{color:'black'},children:[product.productnum,\" - \",product.category]}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"img\",{src:product.imageUrl,alt:product.productnum,className:\"product-image\"}),\" \",/*#__PURE__*/_jsxs(\"p\",{style:{color:'black'},children:[product.price,\" \\uC6D0\"]}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'black'},children:[\"\\uC785\\uACE0\\uC77C: \",product.arrivaldate]}),/*#__PURE__*/_jsxs(\"p\",{style:{color:'black'},children:[\"\\uCE74\\uD14C\\uACE0\\uB9AC: \",product.category]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uD488 \\uC815\\uBCF4\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"})});}export default ProductDetail;","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","jsxs","_jsxs","jsx","_jsx","ProductDetail","productId","product","setProduct","console","log","fetchProductDetail","numericProductId","Number","response","get","data","error","className","children","style","color","productnum","category","src","imageUrl","alt","price","arrivaldate"],"sources":["C:/Users/USER/Desktop/발표 전/homereactCategory/src/components/ProductDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nfunction ProductDetail() {\r\n  const { productId } = useParams(); // URL에서 상품 ID를 받아옵니다.\r\n  const [product, setProduct] = useState(null); // 상품 상태\r\n\r\n  useEffect(() => {\r\n    console.log(\"Received productId:\", productId); // 값 확인\r\n    console.log(\"Type of productId:\", typeof productId); // 타입 확인\r\n\r\n    // 상품 상세 정보를 가져오는 함수\r\n    const fetchProductDetail = async () => {\r\n      try {\r\n        // productId를 Long으로 변환\r\n        const numericProductId = Number(productId);  // productId를 숫자로 변환\r\n\r\n        // 숫자로 변환된 값으로 서버에 요청\r\n        const response = await axios.get(`http://localhost:8080/api/products/${numericProductId}`);\r\n        setProduct(response.data); // 상품 데이터를 상태에 저장\r\n      } catch (error) {\r\n        console.error(\"상품 정보를 가져오는데 실패했습니다:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProductDetail(); // 상품 정보 가져오기\r\n  }, [productId]); // 상품 ID가 변경될 때마다 호출\r\n\r\n  return (\r\n    <div className=\"product-detail\">\r\n      {product ? (\r\n        <div>\r\n          <h2 style={{ color: 'black' }}>{product.productnum} - {product.category}</h2>\r\n          <p></p>\r\n          <img src={product.imageUrl} alt={product.productnum} className=\"product-image\" /> {/* 이미지 */}\r\n          <p style={{ color: 'black' }}>{product.price} 원</p>\r\n          <p style={{ color: 'black' }}>입고일: {product.arrivaldate}</p>\r\n          <p style={{ color: 'black' }}>카테고리: {product.category}</p>\r\n        </div>\r\n      ) : (\r\n        <p>상품 정보를 불러오는 중입니다...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductDetail;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE1B,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAAEC,SAAU,CAAC,CAAGP,SAAS,CAAC,CAAC,CAAE;AACnC,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE9CD,SAAS,CAAC,IAAM,CACdY,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEJ,SAAS,CAAC,CAAE;AAC/CG,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAE,MAAO,CAAAJ,SAAS,CAAC,CAAE;AAErD;AACA,KAAM,CAAAK,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACrC,GAAI,CACF;AACA,KAAM,CAAAC,gBAAgB,CAAGC,MAAM,CAACP,SAAS,CAAC,CAAG;AAE7C;AACA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,sCAAsCH,gBAAgB,EAAE,CAAC,CAC1FJ,UAAU,CAACM,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC7B,CAAE,MAAOC,KAAK,CAAE,CACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CACF,CAAC,CAEDN,kBAAkB,CAAC,CAAC,CAAE;AACxB,CAAC,CAAE,CAACL,SAAS,CAAC,CAAC,CAAE;AAEjB,mBACEF,IAAA,QAAKc,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BZ,OAAO,cACNL,KAAA,QAAAiB,QAAA,eACEjB,KAAA,OAAIkB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,EAAEZ,OAAO,CAACe,UAAU,CAAC,KAAG,CAACf,OAAO,CAACgB,QAAQ,EAAK,CAAC,cAC7EnB,IAAA,OAAM,CAAC,cACPA,IAAA,QAAKoB,GAAG,CAAEjB,OAAO,CAACkB,QAAS,CAACC,GAAG,CAAEnB,OAAO,CAACe,UAAW,CAACJ,SAAS,CAAC,eAAe,CAAE,CAAC,IAAC,cAClFhB,KAAA,MAAGkB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,EAAEZ,OAAO,CAACoB,KAAK,CAAC,SAAE,EAAG,CAAC,cACnDzB,KAAA,MAAGkB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,EAAC,sBAAK,CAACZ,OAAO,CAACqB,WAAW,EAAI,CAAC,cAC5D1B,KAAA,MAAGkB,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAQ,CAAE,CAAAF,QAAA,EAAC,4BAAM,CAACZ,OAAO,CAACgB,QAAQ,EAAI,CAAC,EACvD,CAAC,cAENnB,IAAA,MAAAe,QAAA,CAAG,sFAAmB,CAAG,CAC1B,CACE,CAAC,CAEV,CAEA,cAAe,CAAAd,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}