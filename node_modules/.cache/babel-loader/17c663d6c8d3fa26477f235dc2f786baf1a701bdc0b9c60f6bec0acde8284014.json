{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kmg23\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uB9AC\\uC561\\uD2B8 \\uD30C\\uC77C\\\\homereact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(''); // 상태 관리\n\n  // 컴포넌트가 마운트될 때 서버로 요청 보내기\n  useEffect(() => {\n    // 스프링 부트 서버에 GET 요청 보내기\n    fetch('http://localhost:8080/api/message') // 백엔드 API 호출\n    .then(response => response.text()) // 응답을 텍스트로 받음\n    .then(data => {\n      setMessage(data); // 응답 메시지를 상태에 저장\n    }).catch(error => {\n      console.error('Error:', error); // 오류 처리\n    });\n  }, []); // 빈 배열을 넣으면 컴포넌트가 처음 마운트될 때 한 번만 실행\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3v4ozrfWvlmZ97O5zgyhgDZKC+M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","App","_s","message","setMessage","fetch","then","response","text","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/kmg23/OneDrive/바탕 화면/리액트 파일/homereact/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [message, setMessage] = useState(''); // 상태 관리\n\n  // 컴포넌트가 마운트될 때 서버로 요청 보내기\n  useEffect(() => {\n    // 스프링 부트 서버에 GET 요청 보내기\n    fetch('http://localhost:8080/api/message') // 백엔드 API 호출\n      .then((response) => response.text()) // 응답을 텍스트로 받음\n      .then((data) => {\n        setMessage(data); // 응답 메시지를 상태에 저장\n      })\n      .catch((error) => {\n        console.error('Error:', error); // 오류 처리\n      });\n  }, []); // 빈 배열을 넣으면 컴포넌트가 처음 마운트될 때 한 번만 실행\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>{message}</h1> {/* 서버에서 받은 메시지를 출력 */}\n      </header>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,mCAAmC,CAAC,CAAC;IAAA,CACxCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAAA,CACpCF,IAAI,CAAEG,IAAI,IAAK;MACdL,UAAU,CAACK,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEX,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA;MAAQa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bd,OAAA;QAAAc,QAAA,EAAKX;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAvBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}