{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\cloneReact\\\\homereact\\\\src\\\\components\\\\ProductInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductInput() {\n  _s();\n  const [productnum, setProductnum] = useState('');\n  const [arrivaldate, setArrivaldate] = useState('');\n  const [price, setPrice] = useState('');\n  const [category, setCategory] = useState('');\n  const [imageurl, setImageurl] = useState(null);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // 카테고리 목록\n  const categories = [\"전자\", \"가전\", \"음식\", \"건강\"];\n\n  // 폼 제출\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('폼 제출 시 실행됨');\n\n    // 폼 검증\n    if (!productnum || !arrivaldate || !price || !category || !imageurl) {\n      setError('입력 값을 비우지 마세요.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('productnum', productnum);\n    formData.append('arrivaldate', arrivaldate);\n    formData.append('price', price);\n    formData.append('category', category);\n    formData.append('imageurl', imageurl);\n    formData.forEach((value, key) => {\n      console.log(`${key}:`, value);\n    });\n    try {\n      console.log('FormData:', formData);\n      const response = await fetch('http://localhost:8080/api/productinput', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('상품 추가 실패');\n      }\n      const data = await response.json();\n      console.log('상품 추가 완료', data);\n      navigate('/productinput');\n    } catch (error) {\n      console.error('Error:', error);\n      setError('상품 추가 중 오류 발생');\n    }\n  };\n\n  // 이미지 파일 선택 시 상태 업데이트\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageurl(file);\n      console.log('선택된 파일:', file);\n    }\n  };\n\n  // 카테고리 선택\n  const handleCategorySelect = selectedCategory => {\n    setCategory(selectedCategory === category ? '' : selectedCategory); // 선택 토글 기능\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC0C1\\uD488 \\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: productnum,\n        onChange: e => setProductnum(e.target.value),\n        placeholder: \"\\uC81C\\uD488 \\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: arrivaldate,\n        onChange: e => setArrivaldate(e.target.value),\n        placeholder: \"\\uC785\\uACE0\\uC77C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        placeholder: \"\\uAC00\\uACA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px',\n            marginBottom: '10px'\n          },\n          children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleCategorySelect(cat),\n            style: {\n              backgroundColor: category === cat ? '#007bff' : '#f0f0f0',\n              color: category === cat ? '#fff' : '#000',\n              border: 'none',\n              padding: '5px 10px',\n              cursor: 'pointer',\n              borderRadius: '5px'\n            },\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductInput, \"SgJZEQkUMBOxmfb05DMnuPtsYmU=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductInput;\nexport default ProductInput;\nvar _c;\n$RefreshReg$(_c, \"ProductInput\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ProductInput","_s","productnum","setProductnum","arrivaldate","setArrivaldate","price","setPrice","category","setCategory","imageurl","setImageurl","error","setError","navigate","categories","handleSubmit","e","preventDefault","console","log","formData","FormData","append","forEach","value","key","response","fetch","method","body","ok","Error","data","json","handleImageChange","file","target","files","handleCategorySelect","selectedCategory","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","style","display","gap","marginBottom","map","cat","onClick","backgroundColor","color","border","padding","cursor","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/cloneReact/homereact/src/components/ProductInput.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction ProductInput() {\r\n    const [productnum, setProductnum] = useState('');\r\n    const [arrivaldate, setArrivaldate] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [imageurl, setImageurl] = useState(null);\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    // 카테고리 목록\r\n    const categories = [\"전자\", \"가전\", \"음식\", \"건강\"];\r\n\r\n    // 폼 제출\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log('폼 제출 시 실행됨');\r\n\r\n        // 폼 검증\r\n        if (!productnum || !arrivaldate || !price || !category || !imageurl) {\r\n            setError('입력 값을 비우지 마세요.');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('productnum', productnum);\r\n        formData.append('arrivaldate', arrivaldate);\r\n        formData.append('price', price);\r\n        formData.append('category', category);\r\n        formData.append('imageurl', imageurl);\r\n\r\n        formData.forEach((value, key) => {\r\n            console.log(`${key}:`, value);\r\n        });\r\n\r\n        try {\r\n            console.log('FormData:', formData);\r\n            const response = await fetch('http://localhost:8080/api/productinput', {\r\n                method: 'POST',\r\n                body: formData,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('상품 추가 실패');\r\n            }\r\n\r\n            const data = await response.json();\r\n            console.log('상품 추가 완료', data);\r\n            navigate('/productinput');\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            setError('상품 추가 중 오류 발생');\r\n        }\r\n    };\r\n\r\n    // 이미지 파일 선택 시 상태 업데이트\r\n    const handleImageChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if (file) {\r\n            setImageurl(file);\r\n            console.log('선택된 파일:', file);\r\n        }\r\n    };\r\n\r\n    // 카테고리 선택\r\n    const handleCategorySelect = (selectedCategory) => {\r\n        setCategory(selectedCategory === category ? '' : selectedCategory); // 선택 토글 기능\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>상품 등록</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={productnum}\r\n                    onChange={(e) => setProductnum(e.target.value)}\r\n                    placeholder=\"제품 번호\"\r\n                />\r\n                <input\r\n                    type=\"date\"\r\n                    value={arrivaldate}\r\n                    onChange={(e) => setArrivaldate(e.target.value)}\r\n                    placeholder=\"입고일\"\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    value={price}\r\n                    onChange={(e) => setPrice(e.target.value)}\r\n                    placeholder=\"가격\"\r\n                />\r\n\r\n                {/* 카테고리 선택 버튼 */}\r\n                <div>\r\n                    <label>카테고리 선택:</label>\r\n                    <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n                        {categories.map((cat) => (\r\n                            <button\r\n                                type=\"button\"\r\n                                key={cat}\r\n                                onClick={() => handleCategorySelect(cat)}\r\n                                style={{\r\n                                    backgroundColor: category === cat ? '#007bff' : '#f0f0f0',\r\n                                    color: category === cat ? '#fff' : '#000',\r\n                                    border: 'none',\r\n                                    padding: '5px 10px',\r\n                                    cursor: 'pointer',\r\n                                    borderRadius: '5px'\r\n                                }}\r\n                            >\r\n                                {cat}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <input type=\"file\" onChange={handleImageChange} />\r\n                {error && <p style={{ color: 'red' }}>{error}</p>}\r\n                <button type=\"submit\">등록하기</button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductInput;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}