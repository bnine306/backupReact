{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\\\uC1FC\\uD551\\uBAB0 \\uD504\\uB85C\\uC81D\\uD2B8 \\uBC31\\uC5C5 \\uD30C\\uC77C\\\\homereact(\\uCE74\\uD14C\\uACE0\\uB9AC \\uAC80\\uC0C9)\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // useNavigate import 추가\nimport '../cssfile/Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState(''); // 로그인 실패 시 에러 메시지\n  const [responseMessage, setResponseMessage] = useState(''); // 서버에서 반환한 메시지\n  const navigate = useNavigate(); // navigate 객체 생성\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // 로그인 요청을 위한 userDTO 생성\n    const userDTO = {\n      email,\n      password\n    };\n    try {\n      // 로그인 API 요청\n      const response = await fetch('http://localhost:8080/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(userDTO)\n      });\n      const result = await response.json(); // 서버에서 응답 받기\n\n      if (response.ok) {\n        // 로그인 성공\n        alert(result.message); // 서버에서 성공 메시지 출력\n        navigate('/'); // 로그인 성공 후 홈으로 이동\n      } else {\n        // 로그인 실패 시 에러 메시지 출력\n        setLoginError(result.message);\n        setResponseMessage(''); // 실패 시 서버에서 받은 메시지 설정\n      }\n    } catch (error) {\n      // 네트워크 오류 등 실패 처리\n      setLoginError(\"서버와의 연결에 실패했습니다.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), loginError && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 22\n    }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: responseMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/'),\n      children: \"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"IJliLAqy5fLHj2aIuo/9LTOVFWI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","loginError","setLoginError","responseMessage","setResponseMessage","navigate","handleSubmit","e","preventDefault","userDTO","response","fetch","method","headers","body","JSON","stringify","result","json","ok","alert","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/쇼핑몰 프로젝트 백업 파일/homereact(카테고리 검색)/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // useNavigate import 추가\r\nimport '../cssfile/Login.css';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loginError, setLoginError] = useState(''); // 로그인 실패 시 에러 메시지\r\n  const [responseMessage, setResponseMessage] = useState(''); // 서버에서 반환한 메시지\r\n  const navigate = useNavigate(); // navigate 객체 생성\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // 로그인 요청을 위한 userDTO 생성\r\n    const userDTO = { email, password };\r\n\r\n    try {\r\n      // 로그인 API 요청\r\n      const response = await fetch('http://localhost:8080/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(userDTO),\r\n      });\r\n\r\n      const result = await response.json(); // 서버에서 응답 받기\r\n\r\n      if (response.ok) {\r\n        // 로그인 성공\r\n        alert(result.message); // 서버에서 성공 메시지 출력\r\n        navigate('/'); // 로그인 성공 후 홈으로 이동\r\n      } else {\r\n        // 로그인 실패 시 에러 메시지 출력\r\n        setLoginError(result.message); \r\n        setResponseMessage(''); // 실패 시 서버에서 받은 메시지 설정\r\n      }\r\n    } catch (error) {\r\n      // 네트워크 오류 등 실패 처리\r\n      setLoginError(\"서버와의 연결에 실패했습니다.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>로그인</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">로그인</button>\r\n      </form>\r\n\r\n      {/* 로그인 실패 시 에러 메시지 출력 */}\r\n      {loginError && <p style={{ color: 'red' }}>{loginError}</p>}\r\n\r\n      {/* 서버에서 응답받은 메시지 출력 */}\r\n      {responseMessage && <p>{responseMessage}</p>}\r\n\r\n      {/* 홈으로 돌아가기 버튼 */}\r\n      <button onClick={() => navigate('/')}>홈으로 돌아가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}